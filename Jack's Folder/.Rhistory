theme_minimal()
})
}
# Run the Shiny App
shinyApp(ui, server)
library(shiny)
library(dplyr)
library(ggplot2)
# Define UI
ui <- fluidPage(
titlePanel(tags$h1("Sleep, Productivity & Well-being", style = "font-size: 36px;")),
sidebarLayout(
sidebarPanel(
sliderInput("sleep_filter",
"Filter by Total Sleep Hours:",
min = 4, max = 10, value = 6, step = 0.5)
),
mainPanel(
fluidRow(
column(6, plotOutput("plot_productivity", width = "100%", height = "700px")),  # Left density plot
column(6, plotOutput("plot_stress", width = "100%", height = "700px"))  # Right density plot
)
)
)
)
# Define Server
server <- function(input, output, session) {
session$onSessionEnded(stopApp) # Stop the app when closed
# ðŸ“Œ First Density Plot: Productivity Score by Gender
output$plot_productivity <- renderPlot({
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= as.numeric(input$sleep_filter) - 0.25 &
total_sleep_hours <= as.numeric(input$sleep_filter) + 0.25) %>%  # Noise range Â±0.25
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#e74c3c", "#3498db")) +
labs(title = paste("Productivity Score Density (Sleep:", input$sleep_filter, "Â±0.25 hrs)"),
x = "Productivity Score",
y = "Density") +
theme_minimal()
})
# ðŸ“Œ Second Density Plot: Stress Level by Gender
output$plot_stress <- renderPlot({
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= as.numeric(input$sleep_filter) - 0.25 &
total_sleep_hours <= as.numeric(input$sleep_filter) + 0.25) %>%  # Noise range Â±0.25
ggplot(aes(x = stress_level, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#2ecc71", "#9b59b6")) +
labs(title = "Stress Level Density by Gender",
x = "Stress Level",
y = "Density") +
theme_minimal()
})
}
# Run the Shiny App
shinyApp(ui, server)
library(shiny)
library(dplyr)
library(ggplot2)
# Define UI
ui <- fluidPage(
titlePanel(tags$h1("Sleep, Productivity & Well-being", style = "font-size: 36px;")),
sidebarLayout(
sidebarPanel(
sliderInput("sleep_filter",
"Filter by Total Sleep Hours:",
min = 4, max = 10, value = 6, step = 0.5)
),
mainPanel(
fluidRow(
column(6, plotOutput("plot_productivity", width = "100%", height = "700px")),  # Left density plot
column(6, plotOutput("plot_stress", width = "100%", height = "700px"))  # Right density plot
)
)
)
)
# Define Server
server <- function(input, output, session) {
session$onSessionEnded(stopApp) # Stop the app when closed
# ðŸ“Œ First Density Plot: Productivity Score by Gender
output$plot_productivity <- renderPlot({
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= as.numeric(input$sleep_filter) - 0.25 &
total_sleep_hours <= as.numeric(input$sleep_filter) + 0.25) %>%  # Noise range Â±0.25
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#e74c3c", "#3498db")) +
labs(title = paste("Productivity Score Density (Sleep:", input$sleep_filter, "Â±0.25 hrs)"),
x = "Productivity Score",
y = "Density") +
theme_minimal()
})
# ðŸ“Œ Second Density Plot: Stress Level by Gender
output$plot_stress <- renderPlot({
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= as.numeric(input$sleep_filter) - 0.25 &
total_sleep_hours <= as.numeric(input$sleep_filter) + 0.25) %>%  # Noise range Â±0.25
ggplot(aes(x = stress_level, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#2ecc71", "#9b59b6")) +
labs(title = "Stress Level Density by Gender",
x = "Stress Level",
y = "Density") +
theme_minimal()
})
}
# Run the Shiny App
shinyApp(ui, server)
library(dplyr)
library(ggplot2)
# Sample data (replace this with your actual data)
sleeping <- data.frame(
total_sleep_hours = runif(100, 4, 10),  # Random sleep data between 4 and 10 hours
gender = sample(c("Male", "Female", "Other"), 100, replace = TRUE),
productivity_score = runif(100, 0, 100),  # Random productivity scores between 0 and 100
stress_level = runif(100, 0, 10)  # Random stress levels between 0 and 10
)
# Filter total sleep hours manually (e.g., 6 hours)
sleep_filter <- 6
sleeping_filtered <- sleeping %>%
filter(total_sleep_hours >= sleep_filter - 0.25 &
total_sleep_hours <= sleep_filter + 0.25)  # Noise range Â±0.25 hrs
# ðŸ“Œ First Density Plot: Productivity Score by Gender
plot_productivity <- ggplot(sleeping_filtered %>% filter(gender != "Other"), aes(x = productivity_score, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#e74c3c", "#3498db")) +
labs(title = paste("Productivity Score Density (Sleep:", sleep_filter, "Â±0.25 hrs)"),
x = "Productivity Score",
y = "Density") +
theme_minimal()
# ðŸ“Œ Second Density Plot: Stress Level by Gender
plot_stress <- ggplot(sleeping_filtered %>% filter(gender != "Other"), aes(x = stress_level, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#2ecc71", "#9b59b6")) +
labs(title = paste("Stress Level Density (Sleep:", sleep_filter, "Â±0.25 hrs)"),
x = "Stress Level",
y = "Density") +
theme_minimal()
# Display the plots
print(plot_productivity)
print(plot_stress)
library(dplyr)
library(ggplot2)
# Sample data (replace this with your actual data)
sleeping <- data.frame(
total_sleep_hours = runif(100, 4, 10),  # Random sleep data between 4 and 10 hours
gender = sample(c("Male", "Female", "Other"), 100, replace = TRUE),
productivity_score = runif(100, 0, 100),  # Random productivity scores between 0 and 100
stress_level = runif(100, 0, 10)  # Random stress levels between 0 and 10
)
# Filter total sleep hours manually (e.g., 6 hours)
sleep_filter <- 6
sleeping_filtered <- sleeping %>%
filter(total_sleep_hours >= sleep_filter - 0.25 &
total_sleep_hours <= sleep_filter + 0.25)  # Noise range Â±0.25 hrs
# ðŸ“Œ First Density Plot: Productivity Score by Gender
plot_productivity <- ggplot(sleeping_filtered %>% filter(gender != "Other"), aes(x = productivity_score, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#e74c3c", "#3498db")) +
labs(title = paste("Productivity Score Density (Sleep:", sleep_filter, "Â±0.25 hrs)"),
x = "Productivity Score",
y = "Density") +
theme_minimal()
# ðŸ“Œ Second Density Plot: Stress Level by Gender
plot_stress <- ggplot(sleeping_filtered %>% filter(gender != "Other"), aes(x = stress_level, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#2ecc71", "#9b59b6")) +
labs(title = paste("Stress Level Density (Sleep:", sleep_filter, "Â±0.25 hrs)"),
x = "Stress Level",
y = "Density") +
theme_minimal()
# Display the plots
print(plot_productivity)
print(plot_stress)
#caffeine intake vs productivity
```{r}
sleeping %>%
filter(gender != "Other") %>%
plot_stress <- ggplot(sleeping_filtered %>% filter(gender != "Other"), aes(x = stress_level, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#2ecc71", "#9b59b6")) +
labs(title = paste("Stress Level Density (Sleep:", sleep_filter, "Â±0.25 hrs)"),
x = "Stress Level",
y = "Density") +
theme_minimal()
sleeping %>%
filter(gender != "Other") %>%
plot_stress <- ggplot(sleeping_filtered %>%
, aes(x = stress_level, fill = gender)) +
sleeping %>%
filter(gender!="Other") %>%
ggplot(aes(x=productivity_score, fill = gender))+
geom_density+
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density") +
sleeping %>%
filter(gender!="Other") %>%
ggplot(aes(x=productivity_score, fill = gender))+
geom_density+
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender!="Other") %>%
ggplot(aes(x=productivity_score, fill = gender))+
geom_density+
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender!="Other") %>%
ggplot(aes(x=productivity_score, fill = gender))+
geom_density()+
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
View(sleeping)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(shiny)
library(shinydashboard)
library(shinythemes)
sleeping <- read.csv("/Users/monobuoy/Desktop/BIS15W2025_group7/sleep_cycle_productivity.csv") %>% clean_names()
sleeping
sleeping %>%
filter(gender!="Other") %>%
filter()
ggplot(aes(x=productivity_score, fill = gender))+
geom_density()+
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
library(shiny)
library(dplyr)
library(ggplot2)
# Define UI
ui <- fluidPage(
titlePanel(tags$h1("Sleep, Productivity & Well-being", style = "font-size: 36px;")),
sidebarLayout(
sidebarPanel(
sliderInput("sleep_filter",
"Filter by Total Sleep Hours:",
min = 4, max = 10, value = 6, step = 0.5)
),
mainPanel(
fluidRow(
column(6, plotOutput("plot_productivity", width = "100%", height = "700px")),  # Left density plot
column(6, plotOutput("plot_stress", width = "100%", height = "700px"))  # Right density plot
)
)
)
)
# Define Server
server <- function(input, output, session) {
session$onSessionEnded(stopApp) # Stop the app when closed
Productivity Score by Gender
library(shiny)
library(dplyr)
library(ggplot2)
# Define UI
ui <- fluidPage(
titlePanel(tags$h1("Sleep, Productivity & Well-being", style = "font-size: 36px;")),
sidebarLayout(
sidebarPanel(
sliderInput("sleep_filter",
"Filter by Total Sleep Hours:",
min = 4, max = 10, value = 6, step = 0.5)
),
mainPanel(
fluidRow(
column(6, plotOutput("plot_productivity", width = "100%", height = "700px")),  # Left density plot
column(6, plotOutput("plot_stress", width = "100%", height = "700px"))  # Right density plot
)
)
)
)
# Define Server
server <- function(input, output, session) {
session$onSessionEnded(stopApp) # Stop the app when closed
#Productivity Score by Gender
output$plot_productivity <- renderPlot({
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= as.numeric(input$sleep_filter) - 0.25 &
total_sleep_hours <= as.numeric(input$sleep_filter) + 0.25) %>%  # Noise range Â±0.25
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#e74c3c", "#3498db")) +
labs(title = paste("Productivity Score Density (Sleep:", input$sleep_filter, "Â±0.25 hrs)"),
x = "Productivity Score",
y = "Density") +
theme_minimal()
})
Stress Level by Gender
library(shiny)
library(dplyr)
library(ggplot2)
# Define UI
ui <- fluidPage(
titlePanel(tags$h1("Sleep, Productivity & Well-being", style = "font-size: 36px;")),
sidebarLayout(
sidebarPanel(
sliderInput("sleep_filter",
"Filter by Total Sleep Hours:",
min = 4, max = 10, value = 6, step = 0.5)
),
mainPanel(
fluidRow(
column(6, plotOutput("plot_productivity", width = "100%", height = "700px")),  # Left density plot
column(6, plotOutput("plot_stress", width = "100%", height = "700px"))  # Right density plot
)
)
)
)
# Define Server
server <- function(input, output, session) {
session$onSessionEnded(stopApp) # Stop the app when closed
#Productivity Score by Gender
output$plot_productivity <- renderPlot({
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= as.numeric(input$sleep_filter) - 0.25 &
total_sleep_hours <= as.numeric(input$sleep_filter) + 0.25) %>%  # Noise range Â±0.25
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#e74c3c", "#3498db")) +
labs(title = paste("Productivity Score Density (Sleep:", input$sleep_filter, "Â±0.25 hrs)"),
x = "Productivity Score",
y = "Density") +
theme_minimal()
})
#Stress Level by Gender
output$plot_stress <- renderPlot({
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= as.numeric(input$sleep_filter) - 0.25 &
total_sleep_hours <= as.numeric(input$sleep_filter) + 0.25) %>%  # Noise range Â±0.25
ggplot(aes(x = stress_level, fill = gender)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("#2ecc71", "#9b59b6")) +
labs(title = "Stress Level Density by Gender",
x = "Stress Level",
y = "Density") +
theme_minimal()
})
}
# Run the Shiny App
shinyApp(ui, server)
sleeping %>%
filter(gender!="Other") %>%
filter()
ggplot(aes(x=productivity_score, fill = gender))+
geom_density()+
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender!="Other") %>%
filter(total_sleep_hours == "7") %>%
ggplot(aes(x=productivity_score, fill = gender))+
geom_density()+
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density() +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = stress_level, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Stress")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = stress_level, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Stress")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")+
ggsave("caffeine_vs_stress.png", plot = p, width = 8, height = 5, dpi = 300)
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")+
ggsave("caffeine_vs_stress.png", plot = p, width = 8, height = 5, dpi = 300)
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = stress_level, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Stress")+
ggsave("caffeine_vs_stress.png", plot = p, width = 8, height = 5, dpi = 300)
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = stress_level, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Stress")
ggsave("caffeine_vs_stress.png", plot = p, width = 8, height = 5, dpi = 300)
sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
ggsave("productivity_score_density.png", plot = plot_productivity, width = 8, height = 5, dpi = 300)
plot_productivity <- sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = productivity_score, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Density")
ggsave("productivity_score_density.png", plot = plot_productivity, width = 8, height = 5, dpi = 300)
plot_stress <- sleeping %>%
filter(gender != "Other") %>%
filter(total_sleep_hours >= 6.75 & total_sleep_hours <= 7.25) %>%
ggplot(aes(x = stress_level, fill = gender)) +
geom_density(alpha=0.5) +
labs(title = "Productivity Score Density",
x = "Productivity Score",
y = "Stress")
ggsave("stress_level_density.png", plot = plot_stress, width = 8, height = 5, dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
sleeping <- read.csv("/Users/monobuoy/Desktop/BIS15W2025_group7/sleep_cycle_productivity.csv") %>% clean_names()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(shiny)
library(shinydashboard)
library(shinythemes)
sleeping <- read.csv("/Users/monobuoy/Desktop/BIS15W2025_group7/sleep_cycle_productivity.csv") %>% clean_names()
sleeping
